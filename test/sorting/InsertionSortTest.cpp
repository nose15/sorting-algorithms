//
// Created by lukasz on 13.03.25.
//
//
// Created by lukasz on 12.03.25.
//
#include <random>
#include <gtest/gtest.h>
#include <InsertionSort.hpp>

class InsertionSortTest : public testing::TestWithParam<std::vector<int32_t>> {};

TEST_P(InsertionSortTest, TestAlgorithmCorrect) {
    std::vector<int32_t> nums = GetParam();
    int32_t * arr = nums.begin().base();
    size_t size = nums.size();

    Sorting::InsertionSort insertionSort(arr, size);
    int32_t* res = insertionSort.sort();

    bool sorted = true;
    for (int i = 0; i < size - 1; i++) {
        if (res[i+1] <= res[i]) {
            sorted = false;
            break;
        }
    }

    ASSERT_EQ(sorted, true);
}

INSTANTIATE_TEST_SUITE_P(
        SortingTests,
        InsertionSortTest,
        ::testing::Values(
                std::vector<int32_t>{1, 2, 3, 4, 5},
                std::vector<int32_t>{5, 4, 3, 2, 1},
                std::vector<int32_t>{42},
                std::vector<int32_t>{1, 2},
                std::vector<int32_t>{2, 1},
                std::vector<int32_t>{5, 5, 5, 5, 5},
                std::vector<int32_t>{-3, -1, -7, -2},
                std::vector<int32_t>{-10, 3, 5, -2, 0},
                std::vector<int32_t>{0, 1, -1, 5, -5},

                std::vector<int32_t>{2147483647, 0, -2147483648},
                std::vector<int32_t>{3, 1, 2, 3, 2, 1},
                std::vector<int32_t>{1000, -1000, 999, -999},
                std::vector<int32_t>{1, 1000000, -500, 25000},
                std::vector<int32_t>{1, 2, 6, 4, 5},
                std::vector<int32_t>{5, 4, 2, 3, 1},
                std::vector<int32_t>{2147483647, -2147483648, 1, 2, 3},

                std::vector<int32_t>{
                        0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
                        21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39,
                        40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58,
                        59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                        78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,
                        97, 98, 99
                },

                std::vector<int32_t>{
                        1000, 999, 998, 997, 996, 995, 994, 993, 992, 991, 990, 989, 988, 987, 986,
                        985, 984, 983, 982, 981, 980, 979, 978, 977, 976, 975, 974, 973, 972, 971,
                        970, 969, 968, 967, 966, 965, 964, 963, 962, 961, 960, 959, 958, 957, 956,
                        955, 954, 953, 952, 951, 950, 949, 948, 947, 946, 945, 944, 943, 942, 941,
                        940, 939, 938, 937, 936, 935, 934, 933, 932, 931, 930, 929, 928, 927, 926,
                        925, 924, 923, 922, 921, 920, 919, 918, 917, 916, 915, 914, 913, 912, 911,
                        910, 909, 908, 907, 906, 905, 904, 903, 902, 901, 900, 899, 898, 897, 896,
                        895, 894, 893, 892, 891, 890, 889, 888, 887, 886, 885, 884, 883, 882, 881,
                        880, 879, 878, 877, 876, 875, 874, 873, 872, 871, 870, 869, 868, 867, 866,
                        865, 864, 863, 862, 861, 860, 859, 858, 857, 856, 855, 854, 853, 852, 851,
                        850, 849, 848, 847, 846, 845, 844, 843, 842, 841, 840, 839, 838, 837, 836,
                        835, 834, 833, 832, 831, 830, 829, 828, 827, 826, 825, 824, 823, 822, 821,
                        820, 819, 818, 817, 816, 815, 814, 813, 812, 811, 810, 809, 808, 807, 806,
                        805, 804, 803, 802, 801, 800, 799, 798, 797, 796, 795, 794, 793, 792, 791,
                        790, 789, 788, 787, 786, 785, 784, 783, 782, 781, 780, 779, 778, 777, 776,
                        775, 774, 773, 772, 771, 770, 769, 768, 767, 766, 765, 764, 763, 762, 761,
                        760, 759, 758, 757, 756, 755, 754, 753, 752, 751, 750, 749, 748, 747, 746,
                        745, 744, 743, 742, 741, 740, 739, 738, 737, 736, 735, 734, 733, 732, 731,
                        730, 729, 728, 727, 726, 725, 724, 723, 722, 721, 720, 719, 718, 717, 716,
                        715, 714, 713, 712, 711, 710, 709, 708, 707, 706, 705, 704, 703, 702, 701,
                        700, 699, 698, 697, 696, 695, 694, 693, 692, 691, 690, 689, 688, 687, 686,
                        685, 684, 683, 682, 681, 680, 679, 678, 677, 676, 675, 674, 673, 672, 671,
                        670, 669, 668, 667, 666, 665, 664, 663, 662, 661, 660, 659, 658, 657, 656,
                        655, 654, 653, 652, 651, 650, 649, 648, 647, 646, 645, 644, 643, 642, 641,
                        640, 639, 638, 637, 636, 635, 634, 633, 632, 631, 630, 629, 628, 627, 626,
                        625, 624, 623, 622, 621, 620, 619, 618, 617, 616, 615, 614, 613, 612, 611,
                        610, 609, 608, 607, 606, 605, 604, 603, 602, 601, 600, 599, 598, 597, 596,
                        595, 594, 593, 592, 591, 590, 589, 588, 587, 586, 585, 584, 583, 582, 581,
                        580, 579, 578, 577, 576, 575, 574, 573, 572, 571, 570, 569, 568, 567, 566,
                        565, 564, 563, 562, 561, 560, 559, 558, 557, 556, 555, 554, 553, 552, 551,
                        550, 549, 548, 547, 546, 545, 544, 543, 542, 541, 540, 539, 538, 537, 536,
                        535, 534, 533, 532, 531, 530, 529, 528, 527, 526, 525, 524, 523, 522, 521
                }
        )
);